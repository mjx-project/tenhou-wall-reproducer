name: wheels

# This file is forked from github.com/pybind/cmake_example
# https://github.com/pybind/cmake_example/blob/master/LICENSE

on:
  release:
    types:
      - published

env:
  CIBW_TEST_COMMAND: python {project}/tests/test.py


jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - uses: actions/setup-python@v2

    - name: Install deps
      run: python -m pip install twine build

    - name: Build SDist
      run: python -m build -s

    - name: Check metadata
      run: twine check dist/*

    - uses: actions/upload-artifact@v2
      with:
        path: dist/*.tar.gz


  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - uses: actions/setup-python@v2

    - name: Install cibuildwheel
      run: python -m pip install cibuildwheel

    - name: Build wheel
      run: python -m cibuildwheel --output-dir wheelhouse
      env:
        # Python 2.7 on Windows requires a workaround for C++11 support,
        # built separately below
        CIBW_BEFORE_BUILD_MACOS: brew install gcc ninja && ln -sf $(ls -d /usr/local/bin/* | grep "/g++-" | sort -r | head -n1) /usr/local/bin/g++ && make src/mt19937ar.c && make submodules
        CIBW_BEFORE_BUILD_LINUX: pip install --upgrade pip setuptools wheel cmake ninja && make src/mt19937ar.c && make submodules
        CIBW_SKIP: "cp27-* cp35-* cp36-* *-win32 *win_amd64 pp*"
        CIBW_ARCHS_MACOS: universal2

    - name: Show files
      run: ls -lh wheelhouse
      shell: bash

    - name: Verify clean directory
      run: git diff --exit-code
      shell: bash

    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        path: wheelhouse/*.whl


  upload_all:
    name: Upload if release
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
    - uses: actions/setup-python@v2

    - uses: actions/download-artifact@v2
      with:
        name: artifact
        path: dist

    - uses: pypa/gh-action-pypi-publish@v1.4.1
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}
